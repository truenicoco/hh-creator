name: Package Application
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag or commit SHA
      id: version
      run: |
        case ${{ github.ref }} in
          "refs/tags/v*")
            id=$(echo ${{ github.ref_name }} | cut -c2-)
            ;;
          *)
            id=0.0.0dev+git$(date +%Y%m%d-%H%M)-$(echo ${{ github.sha }} | cut -c1-8)
            ;;
        esac
        echo "::set-output name=id::$id"

    - name: Set version in appropriate files
      run: |
        sed -i 's/NO_VERSION/${{steps.version.outputs.id}}/' hh_creator/__init__.py
        sed -i 's/0.0.0dev/${{steps.version.outputs.id}}/' pyproject.toml

    - name: Install uv
      uses: astral-sh/setup-uv@v4
    - name: export requirements
      run: uv pip compile pyproject.toml -o pyinstaller/requirements.txt

    - name: PyInstaller Windows
      uses: ./.github/actions/pyinstaller
      with:
        path: pyinstaller

    - uses: actions/upload-artifact@v4
      with:
        name: hh-creator
        path: pyinstaller/dist/windows

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Zip for release
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r hh-creator-${{ github.ref_name }}-windows.zip pyinstaller/dist/windows
    - name: Github release
      uses: softprops/action-gh-release@v2
      with:
        files: hh-creator-${{ github.ref_name }}-windows.zip
    - name: PyPI release
      run: |
        uv build
        uv publish
